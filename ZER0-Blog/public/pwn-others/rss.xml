<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pwn Others on ZER0-Blog</title><link>https://zp9080.github.io/pwn-others/</link><description>Recent content in Pwn Others on ZER0-Blog</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 28 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zp9080.github.io/pwn-others/rss.xml" rel="self" type="application/rss+xml"/><item><title>ctypes</title><link>https://zp9080.github.io/pwn-others/ctypes/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/pwn-others/ctypes/</guid><description>用python中的库实现C from pwn import * from ctypes import * from pwnlib.util.packing import p64 p = remote(&amp;#39;10.131.194.201&amp;#39;,59746) LIBC = CDLL(&amp;#39;libc.so.6&amp;#39;) seed = LIBC.time(0) LIBC.srand(seed) x = LIBC.rand() payload = str(x).encode() p.sendline(payload) p.interactive()</description></item><item><title>printf函数</title><link>https://zp9080.github.io/pwn-others/printf%E5%87%BD%E6%95%B0/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/pwn-others/printf%E5%87%BD%E6%95%B0/</guid><description>奇怪的知识点，printf函数会有个判断al的值是否为0的操作来判断是否进行浮点数操作</description></item><item><title>system_execve函数</title><link>https://zp9080.github.io/pwn-others/system_execve%E5%87%BD%E6%95%B0/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/pwn-others/system_execve%E5%87%BD%E6%95%B0/</guid><description>[TOC] system函数 system(&amp;quot;$0&amp;quot;) system(&amp;ldquo;sh&amp;rdquo;) system(&amp;quot;/bin/sh&amp;quot;) system(&amp;quot;/bin//sh&amp;quot;)都可以拿到shell cat *：是一个在命令行中使用的Unix/L</description></item><item><title>反弹shell</title><link>https://zp9080.github.io/pwn-others/%E5%8F%8D%E5%BC%B9shell/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/pwn-others/%E5%8F%8D%E5%BC%B9shell/</guid><description>[TOC] 参考博客 关闭了标准输入、标准输出、标准错误时可以利用反弹shell 反弹shell connect()+dupsh() - 反连 实测这种最好用,这里的ip要填写自己的wsl的ip</description></item><item><title>做题遇到的函数</title><link>https://zp9080.github.io/pwn-others/%E5%81%9A%E9%A2%98%E9%81%87%E5%88%B0%E7%9A%84%E5%87%BD%E6%95%B0/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/pwn-others/%E5%81%9A%E9%A2%98%E9%81%87%E5%88%B0%E7%9A%84%E5%87%BD%E6%95%B0/</guid><description>[TOC] strtoull函数 munmap函数 setvbuf函数 fgets函数 char *fgets(char *str, int n, FILE *stream); fgets() 从 stream 中读取字符，直到读取了 n-1 个字符、读取并转移到字符串</description></item></channel></rss>