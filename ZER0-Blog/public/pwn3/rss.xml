<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PWN3s on ZER0-Blog</title><link>/pwn3/</link><description>Recent content in PWN3s on ZER0-Blog</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 28 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="/pwn3/rss.xml" rel="self" type="application/rss+xml"/><item><title>D3BabyEscape</title><link>/pwn3/qemu/d3babyescape/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>/pwn3/qemu/d3babyescape/</guid><description>[TOC] 学完qemu逃逸后的第一题，这个题难点在于要逆向 题目分析 如何开始逆向 首先根据-device启动参数知道设备是l0dev，接下来进行逆向。逆</description></item><item><title>FastCP</title><link>/pwn3/qemu/fastcp/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>/pwn3/qemu/fastcp/</guid><description>[TOC] 主要参考了这个博客 入门qemu逃逸第一题，花了好几天时间才把所有的细节搞明白 题目分析 题目名字就是fastcp，所以ida直接搜发现这些有关</description></item><item><title>基础知识</title><link>/pwn3/kernel/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>/pwn3/kernel/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>[TOC] 通用保护机制 KASLR FGKASLR STACK PROTECTOR SMAP/SMEP KPTI 内核 “堆” 上保护机制 Hardened Usercopy Hardened freelist Random freelist CONFIG_INIT_ON_ALLOC_DEFAULT_ON 调试相关 在启动sh脚本后加上 -gdb tcp::1234 ，然后在pwndbg中target remote 127.0.0.1 1234</description></item><item><title>基础知识</title><link>/pwn3/qemu/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>/pwn3/qemu/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>[TOC] 常用指令 lspci ls /sys/devices/pci0000\:00/0000\:00\:04.0/ -monitor telnet:127.0.0.1:4444,server,nowait 后 nc 127.0.0.1 4444可以info pci看的更清楚,这个技巧仅限于qemu，发现内核不好使 qemu到底在pwn什么 主要是pwn q</description></item><item><title>权限提升-Change Others</title><link>/pwn3/kernel/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-change-others/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>/pwn3/kernel/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-change-others/</guid><description>如果我们可以改变特权进程的执行轨迹，也可以实现提权。这里我们从以下角度来考虑如何改变特权进程的执行轨迹。 改数据 改代码 符号链接 如果一个 root 权限的</description></item><item><title>权限提升-Change Self</title><link>/pwn3/kernel/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-change-self/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>/pwn3/kernel/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-change-self/</guid><description>内核会通过进程的 task_struct 结构体中的 cred 指针来索引 cred 结构体，然后根据 cred 的内容来判断一个进程拥有的权限，如果 cred 结构体成员中的 uid-fsgid 都为 0，那一般就会认为进程</description></item></channel></rss>