<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vm Pwn on ZER0-Blog</title><link>https://zp9080.github.io/tags/vm-pwn/</link><description>Recent content in Vm Pwn on ZER0-Blog</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 28 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zp9080.github.io/tags/vm-pwn/rss.xml" rel="self" type="application/rss+xml"/><item><title>vm pwn例题</title><link>https://zp9080.github.io/vmpwn/vm-pwn%E4%BE%8B%E9%A2%98/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/vmpwn/vm-pwn%E4%BE%8B%E9%A2%98/</guid><description>OGEEK2019_FINAL_OVM 数组溢出 from pwn import * context.log_level=&amp;#39;debug&amp;#39; p = process(&amp;#34;vmpwn&amp;#34;) elf = ELF(&amp;#34;vmpwn&amp;#34;) libc = elf.libc s = lambda data :p.send(data) sa = lambda text,data :p.sendafter(text, str(data)) sl = lambda data :p.sendline(data) sla = lambda text,data :p.sendlineafter(text, str(data)) r = lambda num=4096 :p.recv(num) ru = lambda text :p.recvuntil(text) uu32 = lambda :u32(p.recvuntil(&amp;#34;\xf7&amp;#34;)[-4:].ljust(4,&amp;#34;\x00&amp;#34;)) uu64 = lambda :u64(p.recvuntil(&amp;#34;\x7f&amp;#34;)[-6:].ljust(8,&amp;#34;\x00&amp;#34;)) lg = lambda name,data :p.success(name + &amp;#34;-&amp;gt; 0x%x&amp;#34; % data) def</description></item><item><title>vm pwn知识学习</title><link>https://zp9080.github.io/vmpwn/vm-pwn%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://zp9080.github.io/vmpwn/vm-pwn%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/</guid><description>参考博客1 参考博客2 有时候可以逆向出结构体 vmpwn难度在于逆向，逆向结束后一般都是会有整数溢出进行任意地址读写或者是个堆题，七分逆向三分猜</description></item></channel></rss>